# ELA Data Platform - Ingestion Configuration
# This file defines all data ingestion jobs, their schedules, and configuration

# Global Configuration
global:
  timezone: "Europe/Paris"
  retry_attempts: 2
  max_parallel_jobs: 3
  gcs_bucket_dev: "ela-dp-dev"
  gcs_bucket_prd: "ela-dp-prd"
  timeout_minutes: 30

# Job Groups for manual execution
job_groups:
  spotify_all:
    description: "All Spotify data sources"
    jobs: ["spotify_recently_played", "spotify_saved_tracks", "spotify_saved_albums", "spotify_playlists", "spotify_top_tracks", "spotify_top_artists"]
  
  fitness_all:
    description: "All fitness data sources"
    jobs: ["strava_activities", "strava_athlete", "garmin_activities", "garmin_sleep", "garmin_heart_rate"]
  
  productivity_all:
    description: "All productivity data sources"
    jobs: ["todoist_tasks", "todoist_projects"]
  
  daily_jobs:
    description: "Jobs that run daily"
    jobs: ["garmin_sleep", "todoist_projects"]
  
  weekly_jobs:
    description: "Jobs that run weekly"
    jobs: ["spotify_saved_tracks", "strava_athlete"]
  
  monthly_jobs:
    description: "Jobs that run monthly"
    jobs: ["spotify_playlists", "spotify_top_tracks", "spotify_top_artists"]

# Individual Jobs Configuration
jobs:
  # =================== SPOTIFY JOBS ===================
  spotify_recently_played:
    service: "spotify"
    data_type: "recently_played"
    description: "Fetch recently played tracks from Spotify"
    cron: "0 */2 * * *"  # Every 2 hours
    command: "python -m src.connectors.spotify.spotify_fetch recently_played --limit 50"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  spotify_saved_tracks:
    service: "spotify"
    data_type: "saved_tracks"
    description: "Fetch saved tracks (liked songs) from Spotify"
    cron: "0 12 * * 0"  # Weekly on Sundays at 12:00 UTC
    command: "python -m src.connectors.spotify.spotify_fetch saved_tracks --limit 500"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  spotify_saved_albums:
    service: "spotify"
    data_type: "saved_albums"
    description: "Fetch saved albums from Spotify"
    cron: "0 12 * * 0"  # Weekly on Sundays at 12:00 UTC
    command: "python -m src.connectors.spotify.spotify_fetch saved_albums --limit 100"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  spotify_playlists:
    service: "spotify"
    data_type: "playlists"
    description: "Fetch user playlists from Spotify"
    cron: "0 8 1 * *"  # Monthly on 1st day at 8:00 UTC
    command: "python -m src.connectors.spotify.spotify_fetch playlists --limit 50"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  spotify_top_tracks:
    service: "spotify"
    data_type: "top_tracks"
    description: "Fetch top tracks from Spotify"
    cron: "0 9 1 * *"  # Monthly on 1st day at 9:00 UTC
    command: "python -m src.connectors.spotify.spotify_fetch top_tracks --limit 50 --time-range medium_term"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  spotify_top_artists:
    service: "spotify"
    data_type: "top_artists"
    description: "Fetch top artists from Spotify"
    cron: "0 10 1 * *"  # Monthly on 1st day at 10:00 UTC
    command: "python -m src.connectors.spotify.spotify_fetch top_artists --limit 50 --time-range medium_term"
    environment: "dev"
    enabled: true
    dependencies: ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET", "SPOTIFY_REDIRECT_URI", "SPOTIFY_REFRESH_TOKEN"]

  # =================== STRAVA JOBS ===================
  strava_activities:
    service: "strava"
    data_type: "activities"
    description: "Fetch activities from Strava"
    cron: "0 */6 * * *"  # Every 6 hours
    command: "python -m src.connectors.strava.strava"
    environment: "dev"
    enabled: true
    dependencies: ["STRAVA_CLIENT_ID", "STRAVA_CLIENT_SECRET", "STRAVA_REFRESH_TOKEN"]

  strava_athlete:
    service: "strava"
    data_type: "athlete"
    description: "Fetch athlete profile from Strava"
    cron: "0 6 * * 1"  # Weekly on Mondays at 6:00 UTC
    command: "python -m src.connectors.strava.strava --athlete"
    environment: "dev"
    enabled: true
    dependencies: ["STRAVA_CLIENT_ID", "STRAVA_CLIENT_SECRET", "STRAVA_REFRESH_TOKEN"]

  # =================== GARMIN JOBS ===================
  garmin_activities:
    service: "garmin"
    data_type: "activities"
    description: "Fetch activities from Garmin"
    cron: "0 */4 * * *"  # Every 4 hours
    command: "python -m src.connectors.garmin.garmin_fetch activities --days 7"
    environment: "dev"
    enabled: true
    dependencies: ["GARMIN_USERNAME", "GARMIN_PASSWORD"]

  garmin_sleep:
    service: "garmin"
    data_type: "sleep"
    description: "Fetch sleep data from Garmin"
    cron: "0 8 * * *"  # Daily at 8:00 UTC
    command: "python -m src.connectors.garmin.garmin_fetch sleep --days 2"
    environment: "dev"
    enabled: true
    dependencies: ["GARMIN_USERNAME", "GARMIN_PASSWORD"]

  garmin_heart_rate:
    service: "garmin"
    data_type: "heart_rate"
    description: "Fetch heart rate data from Garmin"
    cron: "0 */8 * * *"  # Every 8 hours
    command: "python -m src.connectors.garmin.garmin_fetch heart_rate --days 1"
    environment: "dev"
    enabled: true
    dependencies: ["GARMIN_USERNAME", "GARMIN_PASSWORD"]

  # =================== TODOIST JOBS ===================
  todoist_tasks:
    service: "todoist"
    data_type: "tasks"
    description: "Fetch tasks from Todoist"
    cron: "0 */3 * * *"  # Every 3 hours
    command: "python -m src.connectors.todoist.todoist tasks"
    environment: "dev"
    enabled: true
    dependencies: ["TODOIST_API_TOKEN"]

  todoist_projects:
    service: "todoist"
    data_type: "projects"
    description: "Fetch projects from Todoist"
    cron: "0 7 * * *"  # Daily at 7:00 UTC
    command: "python -m src.connectors.todoist.todoist projects"
    environment: "dev"
    enabled: true
    dependencies: ["TODOIST_API_TOKEN"]

# Service-specific configuration
services:
  spotify:
    base_path: "src/connectors/spotify"
    fetch_script: "spotify_fetch.py"
    default_limit: 50
    supported_data_types: ["recently_played", "saved_tracks", "saved_albums", "playlists", "top_tracks", "top_artists"]
  
  strava:
    base_path: "src/connectors/strava"
    fetch_script: "strava.py"
    supported_data_types: ["activities", "athlete"]
  
  garmin:
    base_path: "src/connectors/garmin"
    fetch_script: "garmin_fetch.py"
    supported_data_types: ["activities", "sleep", "heart_rate"]
  
  todoist:
    base_path: "src/connectors/todoist"
    fetch_script: "todoist.py"
    supported_data_types: ["tasks", "projects"]